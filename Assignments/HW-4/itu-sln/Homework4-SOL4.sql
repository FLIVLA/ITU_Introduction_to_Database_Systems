DROP TABLE IF EXISTS PresidesOver CASCADE;
DROP TABLE IF EXISTS Promises CASCADE;
DROP TABLE IF EXISTS Monsters CASCADE;
DROP TABLE IF EXISTS Seamonsters CASCADE;
DROP TABLE IF EXISTS Cyclops CASCADE;
DROP TABLE IF EXISTS Attack CASCADE;
DROP TABLE IF EXISTS Wine CASCADE;
DROP TABLE IF EXISTS Valuables CASCADE;
DROP TABLE IF EXISTS Flesh CASCADE;
DROP TABLE IF EXISTS Items CASCADE;
DROP TABLE IF EXISTS Priests CASCADE;
DROP TABLE IF EXISTS Humans CASCADE;
DROP TABLE IF EXISTS Gods CASCADE;

-- The DDL

CREATE TABLE Gods
(
	ID INTEGER PRIMARY KEY,
	name VARCHAR NOT NULL
);

CREATE TABLE Humans
(
	ID INTEGER PRIMARY KEY,
	name VARCHAR NOT NULL
);

CREATE TABLE Priests
(
	ID INTEGER PRIMARY KEY REFERENCES Humans(ID),
	godID INTEGER NOT NULL REFERENCES Gods(ID)
);

CREATE TABLE Promises
(
	humanID INTEGER REFERENCES Humans(ID),
	godID INTEGER REFERENCES Gods(ID),
	description VARCHAR NOT NULL,
	PRIMARY KEY (humanID, godID)
);

CREATE TABLE Items
(
	ID INTEGER PRIMARY KEY,
	value INTEGER NOT NULL,

	-- The relationship
	humanID INTEGER NOT NULL REFERENCES Humans(ID),
	godID INTEGER NOT NULL REFERENCES Gods(ID),
	date DATE NOT NULL,
	time TIME NOT NULL
);

CREATE TABLE Wine
(
	ID INTEGER PRIMARY KEY REFERENCES Items(ID),
	-- other attributes
);

CREATE TABLE Valuables
(
	ID INTEGER PRIMARY KEY REFERENCES Items(ID),
	-- other attributes
);

CREATE TABLE Flesh
(
	ID INTEGER PRIMARY KEY REFERENCES Items(ID),
	-- other attributes
);


-- An alternative solution would be to merge the following with the Items table
CREATE TABLE PresidesOver
(
	itemID INTEGER PRIMARY KEY REFERENCES Items(ID),
	priestID INTEGER NOT NULL REFERENCES Priests(ID)
);

CREATE TABLE Monsters
(
	ID INTEGER PRIMARY KEY
);

CREATE TABLE Seamonsters
(
	ID INTEGER PRIMARY KEY REFERENCES Monsters(ID)
);

CREATE TABLE Cyclops
(
	ID INTEGER PRIMARY KEY REFERENCES Monsters(ID)
);

CREATE TABLE Attack
(
	humanID INTEGER REFERENCES Humans(ID),
	monsterID INTEGER REFERENCES Monsters(ID),
	PRIMARY KEY (humanID, monsterID)
);

